import numpy as np
import pytest

import src.valladopy.astro.covariance.frame_conversions as fc

from ...conftest import custom_allclose


class TestClassical:
    @pytest.fixture
    def classcov_m_exp(self):
        return [
            [
                5331023186024109.0,
                -9040508.167764489,
                -31592.14808101208,
                34232891.77449311,
                4042240100.791793,
                -4083183084.476787,
            ],
            [
                -9040508.167764485,
                0.015331208062918465,
                5.372146060128627e-05,
                -0.058207412772983746,
                -6.854798802080871,
                6.924385395457873,
            ],
            [
                -31592.148081012085,
                5.3721460601286275e-05,
                1.7678810701926767e-06,
                -0.0019143196050926616,
                -0.02224371317903348,
                0.024197798266311996,
            ],
            [
                34232891.77449311,
                -0.05820741277298375,
                -0.0019143196050926614,
                2.0749611965515924,
                24.101664311430255,
                -26.219712037129224,
            ],
            [
                4042240100.791794,
                -6.854798802080872,
                -0.02224371317903348,
                24.101664311430255,
                3066.878198247249,
                -3096.0677824371123,
            ],
            [
                -4083183084.476787,
                6.924385395457872,
                0.024197798266311993,
                -26.219712037129213,
                -3096.0677824371114,
                3127.4269467985023,
            ],
        ]

    @pytest.fixture
    def tm_m_expected(self):
        return np.array(
            [
                [
                    0.5253644964759826,
                    1.9273603788610492,
                    -0.001523317811913225,
                    -26137.953191986773,
                    8005.506889386072,
                    18.098855265405795,
                ],
                [
                    -2.301155985975573e-08,
                    5.8138513632311184e-09,
                    1.6619281402670584e-11,
                    0.00010674050364398441,
                    0.00030712477953877607,
                    -2.6259857897553283e-07,
                ],
                [
                    -1.5651228313484214e-11,
                    -1.0075971851611348e-11,
                    -1.814633059178445e-08,
                    1.876600229186106e-07,
                    1.208120584130285e-07,
                    0.00021757658550672633,
                ],
                [
                    -1.2893279250251951e-08,
                    -8.30045516031882e-09,
                    -1.494871220283562e-05,
                    -0.00020332310643289575,
                    -0.0001308956624025655,
                    -0.23573666119055636,
                ],
                [
                    1.9975551200319462e-07,
                    7.480373001058164e-07,
                    1.4948132421348424e-05,
                    -0.01980854835831763,
                    0.006124227038806058,
                    0.2357504695553114,
                ],
                [
                    -2.1012648980705486e-07,
                    -7.34696403701101e-07,
                    5.891834658944977e-10,
                    0.020044836175870634,
                    -0.006003072956312084,
                    -1.3955411651010935e-05,
                ],
            ]
        )

    def test_covct2cl(self, classcov_m_exp, tm_m_expected):
        cartcov = np.array(
            [
                [24097166, 86695628, -5509927, -6294.97, 1752.326, 17.65861],
                [86695628, 453000000, -28000000, -32967.4, 6319.431, 90.73355],
                [-5509927, -28000000, 1771703, 2061.582, -401.582, -5.67764],
                [-6294.97, -32967.4, 2061.582, 6949865, -1352586, 0.385006],
                [1752.326, 6319.431, -401.582, -1352586, 263241.3, 2.013476],
                [17.65861, 90.73355, -5.67764, 0.385006, 2.013476, 33.37338],
            ]
        )
        cartstate = np.array(
            [
                11074.95274,
                40629.74421,
                -32.1123199,
                -2.940822436,
                0.9007122363,
                0.002036330819,
            ]
        )

        # Test mean anomaly output
        classcov, tm = fc.covct2cl(cartcov, cartstate, use_mean_anom=True)

        assert custom_allclose(classcov, classcov_m_exp)
        assert custom_allclose(tm, tm_m_expected)
