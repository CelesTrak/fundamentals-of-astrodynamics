import numpy as np
import pytest

import src.valladopy.astro.covariance.frame_conversions as fc

from ...conftest import custom_allclose


class TestClassical:
    classcov_lastrow_mean = [
        -4083183084.476787,
        6.924385395457872,
        0.024197798266311993,
        -26.219712037129213,
        -3096.0677824371114,
        3127.4269467985023,
    ]

    classcov_lastrow_true = [
        -4076472971.3328567,
        6.913006182584299,
        0.024158032674088642,
        -26.176623722291907,
        -3090.979848722306,
        3117.1564568280405,
    ]

    @pytest.fixture
    def class_cov_base(self):
        return [
            [
                5331023186024109.0,
                -9040508.167764489,
                -31592.14808101208,
                34232891.77449311,
                4042240100.791793,
            ],
            [
                -9040508.167764485,
                0.015331208062918465,
                5.372146060128627e-05,
                -0.058207412772983746,
                -6.854798802080871,
            ],
            [
                -31592.148081012085,
                5.3721460601286275e-05,
                1.7678810701926767e-06,
                -0.0019143196050926616,
                -0.02224371317903348,
            ],
            [
                34232891.77449311,
                -0.05820741277298375,
                -0.0019143196050926614,
                2.0749611965515924,
                24.101664311430255,
            ],
            [
                4042240100.791794,
                -6.854798802080872,
                -0.02224371317903348,
                24.101664311430255,
                3066.878198247249,
            ],
        ]

    @pytest.fixture
    def class_tm_base(self):
        return [
            [
                0.5253644964759826,
                1.9273603788610492,
                -0.001523317811913225,
                -26137.953191986773,
                8005.506889386072,
                18.098855265405795,
            ],
            [
                -2.301155985975573e-08,
                5.8138513632311184e-09,
                1.6619281402670584e-11,
                0.00010674050364398441,
                0.00030712477953877607,
                -2.6259857897553283e-07,
            ],
            [
                -1.5651228313484214e-11,
                -1.0075971851611348e-11,
                -1.814633059178445e-08,
                1.876600229186106e-07,
                1.208120584130285e-07,
                0.00021757658550672633,
            ],
            [
                -1.2893279250251951e-08,
                -8.30045516031882e-09,
                -1.494871220283562e-05,
                -0.00020332310643289575,
                -0.0001308956624025655,
                -0.23573666119055636,
            ],
            [
                1.9975551200319462e-07,
                7.480373001058164e-07,
                1.4948132421348424e-05,
                -0.01980854835831763,
                0.006124227038806058,
                0.2357504695553114,
            ],
        ]

    @pytest.fixture
    def class_state_base(self):
        return [
            42087.7080574158,
            0.0310900603602949,
            0.00102577939911935,
            2.14278761707691,
            3.82453248238077,
        ]

    @pytest.mark.parametrize(
        "use_mean_anom, tm_lastrow, cov_lastrow",
        [
            (
                True,
                [
                    -2.1012648980705486e-07,
                    -7.34696403701101e-07,
                    5.891834658944977e-10,
                    0.020044836175870634,
                    -0.006003072956312084,
                    -1.3955411651010935e-05,
                ],
                classcov_lastrow_mean,
            ),
            (
                False,
                [
                    -2.0977247629131585e-07,
                    -7.334919093688606e-07,
                    5.882093186826968e-10,
                    0.02001187135777983,
                    -0.005993331445269153,
                    -1.3932388555455746e-05,
                ],
                classcov_lastrow_true,
            ),
        ],
    )
    def test_covct2cl(
        self, class_cov_base, class_tm_base, use_mean_anom, tm_lastrow, cov_lastrow
    ):
        # Define cartesian inputs
        cartcov = np.array(
            [
                [24097166, 86695628, -5509927, -6294.97, 1752.326, 17.65861],
                [86695628, 453000000, -28000000, -32967.4, 6319.431, 90.73355],
                [-5509927, -28000000, 1771703, 2061.582, -401.582, -5.67764],
                [-6294.97, -32967.4, 2061.582, 6949865, -1352586, 0.385006],
                [1752.326, 6319.431, -401.582, -1352586, 263241.3, 2.013476],
                [17.65861, 90.73355, -5.67764, 0.385006, 2.013476, 33.37338],
            ]
        )
        cartstate = np.array(
            [
                11074.95274,
                40629.74421,
                -32.1123199,
                -2.940822436,
                0.9007122363,
                0.002036330819,
            ]
        )

        # Update matrices
        # For covariance, last row == last column
        tm_expected = np.vstack([class_tm_base, tm_lastrow])
        cov_expected = np.column_stack(
            [np.vstack([class_cov_base, cov_lastrow[:-1]]), cov_lastrow]
        )

        # Test mean anomaly output
        classcov, tm = fc.covct2cl(cartcov, cartstate, use_mean_anom=use_mean_anom)

        assert custom_allclose(classcov, cov_expected)
        assert custom_allclose(tm, tm_expected)

    @pytest.mark.parametrize(
        "use_mean_anom, anom_rad, cov_lastrow, tm_exp, cartcov_exp",
        [
            (
                True,
                1.55837880318832,
                classcov_lastrow_mean,
                np.array(
                    [
                        [
                            0.26313983942512426,
                            -122181.09461831323,
                            -27000.833116307094,
                            -40629744.21000002,
                            -40629740.66496733,
                            -40219144.61841942,
                        ],
                        [
                            0.9653589155905844,
                            -510035.2045932821,
                            -17382.637901740887,
                            11074952.739999903,
                            11074974.61023185,
                            12318280.508156924,
                        ],
                        [
                            -0.000762985712046392,
                            388.5845977374862,
                            -31305277.396918915,
                            0.0,
                            28893.677010573563,
                            27849.176713029363,
                        ],
                        [
                            3.493683276822948e-05,
                            865.2314914318102,
                            1.71219733686734,
                            -900.7122362999926,
                            -900.7106317278178,
                            -808.3919389536693,
                        ],
                        [
                            -1.0700419170738e-05,
                            2955.794755743881,
                            1.1022810368438238,
                            -2940.822436000001,
                            -2940.8226451355285,
                            -2965.6792649314566,
                        ],
                        [
                            -2.4191514732274634e-08,
                            -2.387504193316633,
                            1985.1540268409651,
                            0.0,
                            2.409791539953639,
                            2.3439685169019615,
                        ],
                    ]
                ),
                np.array(
                    [
                        [
                            24098442.580799103,
                            86695218.21947145,
                            -5509927.873355819,
                            -6294.930929586146,
                            1752.417985989945,
                            17.658533888831073,
                        ],
                        [
                            86695551.13614655,
                            453000033.8695812,
                            -27999999.954731148,
                            -32967.40471932187,
                            6319.425707785413,
                            90.7335547196626,
                        ],
                        [
                            -5509927.0577840805,
                            -27999999.943911552,
                            1771703.0000502856,
                            2061.5921072992423,
                            -401.5839722053788,
                            -5.677635830610768,
                        ],
                        [
                            -6294.951171875,
                            -32967.40576171875,
                            2061.5921034812927,
                            6949865.000000715,
                            -1352585.999998629,
                            0.38500535738421604,
                        ],
                        [
                            1752.479736328125,
                            6319.385314941406,
                            -401.58407604694366,
                            -1352585.9999958351,
                            263241.3000110984,
                            2.013476115767844,
                        ],
                        [
                            17.658579101844225,
                            90.73356022074586,
                            -5.677635813602592,
                            0.3850053571416687,
                            2.01347612272229,
                            33.37338000069615,
                        ],
                    ]
                ),
            ),
            (
                False,
                1.62054408207275,
                classcov_lastrow_true,
                np.array(
                    [
                        [
                            0.26313983942513086,
                            -137728.61043798938,
                            -27000.833116307254,
                            -40629744.20999994,
                            -40629740.66496724,
                            -40285313.20469349,
                        ],
                        [
                            0.9653589155905823,
                            -505273.3265653776,
                            -17382.637901740993,
                            11074952.740000183,
                            11074974.61023213,
                            12338546.558424711,
                        ],
                        [
                            -0.0007629857120463965,
                            399.3502547305805,
                            -31305277.3969191,
                            0.0,
                            28893.67701057334,
                            27894.994212866175,
                        ],
                        [
                            3.4936832768229415e-05,
                            864.918991338172,
                            1.7121973368673264,
                            -900.712236300013,
                            -900.7106317278384,
                            -809.7219063675537,
                        ],
                        [
                            -1.0700419170738243e-05,
                            2954.648313030472,
                            1.1022810368438152,
                            -2940.8224359999954,
                            -2940.822645135523,
                            -2970.558404111681,
                        ],
                        [
                            -2.4191514732274445e-08,
                            -2.386598085343853,
                            1985.1540268409494,
                            0.0,
                            2.409791539953653,
                            2.347824816793632,
                        ],
                    ]
                ),
                np.array(
                    [
                        [
                            24096124.615553856,
                            86695907.30600595,
                            -5509926.253087776,
                            -6294.978854407527,
                            1752.2477284182096,
                            17.658669530529835,
                        ],
                        [
                            86696324.15161896,
                            452999803.3278446,
                            -28000000.491524436,
                            -32967.38936690602,
                            6319.482606475707,
                            90.73350950974327,
                        ],
                        [
                            -5509925.572429657,
                            -28000000.403985977,
                            1771702.9990295544,
                            2061.592136245985,
                            -401.58386245468864,
                            -5.67763592028615,
                        ],
                        [
                            -6294.9677734375,
                            -32967.4013671875,
                            2061.5921149253845,
                            6949865.000000477,
                            -1352585.9999996424,
                            0.3850053581991233,
                        ],
                        [
                            1752.24560546875,
                            6319.4521484375,
                            -401.58391058444977,
                            -1352586.000000529,
                            263241.29999387264,
                            2.013476129475748,
                        ],
                        [
                            17.658705342852045,
                            90.73352183160023,
                            -5.677635904114169,
                            0.3850053595509486,
                            2.0134761320387486,
                            33.37338000068877,
                        ],
                    ]
                ),
            ),
        ],
    )
    def test_covcl2ct(
        self,
        class_state_base,
        class_cov_base,
        class_tm_base,
        use_mean_anom,
        anom_rad,
        cov_lastrow,
        tm_exp,
        cartcov_exp,
    ):
        # Define classical inputs
        class_state = np.array([*class_state_base, anom_rad])

        # Update covariance (last row == last column)
        class_cov = np.column_stack(
            [np.vstack([class_cov_base, cov_lastrow[:-1]]), cov_lastrow]
        )

        # Test mean anomaly output
        cartcov, tm = fc.covcl2ct(class_cov, class_state, use_mean_anom=use_mean_anom)

        assert custom_allclose(cartcov, cartcov_exp, rtol=1e-6, atol=1e-4)
        assert custom_allclose(tm, tm_exp)
